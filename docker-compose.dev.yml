version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-srioxdb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-srioxdb}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET:-development_secret}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      - postgres

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:5000
      WATCHPACK_POLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
